#define memorydepth 5000
#include "/home/henrique/Dropbox/Unicamp/Doutorado/Root/Programs/italy/ADC_LAr_SuperCell/class/MYCODES.h"



void nofilter_giveMeSphe_darkCount(){
    
    SPHE dark;
    
    dark.led_calibration=false;
    
    dark.just_a_test = false;
    dark.just_this = 200;
    
    dark.tolerance = 4.8; // n sigmas (smoothed)
    dark.baseLimit = 8; // higher then this wont contribute to the baseline abs(baseLimit)
    dark.baselineTime = 5000;
    dark.start = 300; // start the search for peaks or start the integration (led)
    dark.finish = 15500; // fisish the search or finish the integration (led)
    
    dark.timeLimit = 0; // time after LED signal
    dark.timeLow = 60; // integration time before peak
    dark.timeHigh = 800; // integration time after peak
    
    dark.lowerThreshold = -99; // threshold to detect noise (normal waveform)
    dark.maxHits = 3; // maximum hit before discarding  
    
    dark.too_big = 150; // if there is a peak > "too_big" .. wait "waiting" ns
    dark.waiting = 3000;
    
    dark.interactions = 75; // for moving avarage
    dark.shifter = 46; 
    
    
    dark.dtime = 4.;

    dark.get_wave_form = true;
    dark.mean_before = 340; // time recorded before and after the peak found 
    dark.mean_after = 6000;
    dark.sphe_charge_ch0 = 6355.27; // wave0
    dark.sphe_charge2_ch0 = 11766.1; // wave0
    
//     dark.sphe_charge_ch1 = 1798.8; // wave0
//     dark.sphe_charge2_ch1 = 3546.52; // wave0
    
    dark.channel = 1;
        
    
    dark.giveMeSphe_darkCount("analyzed_no_filter");
//     dark.channel = 2;
//     dark.giveMeSphe_darkCount("analyzed");

    
    gROOT->SetBatch(kFALSE);
    
}
